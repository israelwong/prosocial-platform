import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function clearCatalogo() {
    console.log('üóëÔ∏è  Limpiando cat√°logo existente...\n');

    try {
        // Buscar el proyecto "demo-studio"
        const demoStudio = await prisma.projects.findUnique({
            where: { slug: 'demo-studio' },
        });

        if (!demoStudio) {
            console.error('‚ùå Error: No se encontr√≥ el proyecto "demo-studio"');
            return;
        }

        console.log(`‚úÖ Proyecto encontrado: ${demoStudio.name} (${demoStudio.slug})\n`);

        // Eliminar en el orden correcto (por foreign keys)
        console.log('üîÑ Eliminando servicios...');
        const serviciosDeleted = await prisma.project_servicios.deleteMany({
            where: { studioId: demoStudio.id },
        });
        console.log(`   ‚úÖ ${serviciosDeleted.count} servicio(s) eliminado(s)`);

        console.log('üîÑ Eliminando relaciones secci√≥n-categor√≠a...');
        const relacionesDeleted = await prisma.project_seccion_categorias.deleteMany({});
        console.log(`   ‚úÖ ${relacionesDeleted.count} relaci√≥n(es) eliminada(s)`);

        console.log('üîÑ Eliminando categor√≠as...');
        const categoriasDeleted = await prisma.project_servicio_categorias.deleteMany({});
        console.log(`   ‚úÖ ${categoriasDeleted.count} categor√≠a(s) eliminada(s)`);

        console.log('üîÑ Eliminando secciones...');
        const seccionesDeleted = await prisma.project_servicio_secciones.deleteMany({});
        console.log(`   ‚úÖ ${seccionesDeleted.count} secci√≥n(es) eliminada(s)`);

        console.log('\n‚ú® ¬°Limpieza completada!\n');
    } catch (error) {
        console.error('\n‚ùå Error durante la limpieza:', error);
        throw error;
    } finally {
        await prisma.$disconnect();
    }
}

// Ejecutar limpieza
clearCatalogo()
    .then(() => {
        console.log('‚úÖ Script finalizado correctamente');
        process.exit(0);
    })
    .catch((error) => {
        console.error('‚ùå Script fall√≥:', error);
        process.exit(1);
    });
