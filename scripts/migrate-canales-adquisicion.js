const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function runMigration() {
    try {
        console.log('üöÄ Iniciando migraci√≥n del sistema de canales de adquisici√≥n...');

        // Crear la tabla ProSocialCanalAdquisicion
        console.log('üìã Creando tabla prosocial_canales_adquisicion...');
        await prisma.$executeRawUnsafe(`
            CREATE TABLE "prosocial_canales_adquisicion" (
                "id" TEXT NOT NULL,
                "nombre" TEXT NOT NULL,
                "descripcion" TEXT,
                "categoria" TEXT NOT NULL,
                "color" TEXT,
                "icono" TEXT,
                "isActive" BOOLEAN NOT NULL DEFAULT true,
                "isVisible" BOOLEAN NOT NULL DEFAULT true,
                "orden" INTEGER NOT NULL DEFAULT 0,
                "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
                "updatedAt" TIMESTAMP(3) NOT NULL,

                CONSTRAINT "prosocial_canales_adquisicion_pkey" PRIMARY KEY ("id")
            );
        `);

        // Crear √≠ndices
        console.log('üìã Creando √≠ndices...');
        await prisma.$executeRawUnsafe(`CREATE UNIQUE INDEX "prosocial_canales_adquisicion_nombre_key" ON "prosocial_canales_adquisicion"("nombre");`);
        await prisma.$executeRawUnsafe(`CREATE INDEX "prosocial_canales_adquisicion_categoria_idx" ON "prosocial_canales_adquisicion"("categoria");`);
        await prisma.$executeRawUnsafe(`CREATE INDEX "prosocial_canales_adquisicion_isActive_idx" ON "prosocial_canales_adquisicion"("isActive");`);
        await prisma.$executeRawUnsafe(`CREATE INDEX "prosocial_canales_adquisicion_isVisible_idx" ON "prosocial_canales_adquisicion"("isVisible");`);

        // Agregar columna canalAdquisicionId a la tabla prosocial_leads
        console.log('üìã Agregando columna canalAdquisicionId a prosocial_leads...');
        await prisma.$executeRawUnsafe(`ALTER TABLE "prosocial_leads" ADD COLUMN "canalAdquisicionId" TEXT;`);

        // Crear √≠ndice para la nueva columna
        await prisma.$executeRawUnsafe(`CREATE INDEX "prosocial_leads_canalAdquisicionId_idx" ON "prosocial_leads"("canalAdquisicionId");`);

        // Agregar foreign key
        console.log('üìã Agregando foreign key...');
        await prisma.$executeRawUnsafe(`ALTER TABLE "prosocial_leads" ADD CONSTRAINT "prosocial_leads_canalAdquisicionId_fkey" FOREIGN KEY ("canalAdquisicionId") REFERENCES "prosocial_canales_adquisicion"("id") ON DELETE SET NULL ON UPDATE CASCADE;`);

        console.log('‚úÖ Tablas creadas exitosamente');

        // Verificar que todo funcion√≥
        const canalesCount = await prisma.proSocialCanalAdquisicion.count();
        console.log(`üìà Total de canales: ${canalesCount}`);

        const leadsCount = await prisma.proSocialLead.count();
        console.log(`üë• Total de leads: ${leadsCount}`);

        console.log('üéâ Migraci√≥n completada exitosamente!');

    } catch (error) {
        console.error('‚ùå Error durante la migraci√≥n:', error);
        throw error;
    } finally {
        await prisma.$disconnect();
    }
}

// Ejecutar la migraci√≥n
runMigration()
    .then(() => {
        console.log('‚úÖ Migraci√≥n finalizada');
        process.exit(0);
    })
    .catch((error) => {
        console.error('‚ùå Error:', error);
        process.exit(1);
    });
